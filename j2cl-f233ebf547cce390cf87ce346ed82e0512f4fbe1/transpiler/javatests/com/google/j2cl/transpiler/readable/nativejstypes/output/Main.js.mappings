[Main] => [Main]
[Main] => [constructor]
[Main] => [super();] "com.google.j2cl.transpiler.readable.nativejstypes.Main.<synthetic: ctor_js>"
[Main] => [$create__]
[Main] => [Main.$clinit();] "com.google.j2cl.transpiler.readable.nativejstypes.Main.<synthetic: ctor_create>"
[Main] => [let $instance = new Main();] "com.google.j2cl.transpiler.readable.nativejstypes.Main.<synthetic: ctor_create>"
[Main] => [$instance.$ctor__com_google_j2cl_transpiler_readable_nativejstypes_Main__();] "com.google.j2cl.transpiler.readable.nativejstypes.Main.<synthetic: ctor_create>"
[Main] => [return $instance;] "com.google.j2cl.transpiler.readable.nativejstypes.Main.<synthetic: ctor_create>"
[Main] => [$ctor__com_google_j2cl_transpiler_readable_nativejstypes_Main__]
[Main] => [this.$ctor__java_lang_Object__();] "com.google.j2cl.transpiler.readable.nativejstypes.Main.<init>"
[testNativeJsTypeWithNamespace] => [m_testNativeJsTypeWithNamespace__]
[testNativeJsTypeWithNamespace] => [Main.$clinit();] "com.google.j2cl.transpiler.readable.nativejstypes.Main.testNativeJsTypeWithNamespace"
[Foo foo = new Foo();] => [let foo = new Foo();] "com.google.j2cl.transpiler.readable.nativejstypes.Main.testNativeJsTypeWithNamespace"
[foo] => [foo] "foo"
[foo.x = 50;] => [foo.x = 50;] "com.google.j2cl.transpiler.readable.nativejstypes.Main.testNativeJsTypeWithNamespace"
[foo.y = 5;] => [foo.y = 5;] "com.google.j2cl.transpiler.readable.nativejstypes.Main.testNativeJsTypeWithNamespace"
[return foo.sum();] => [return foo.sum();] "com.google.j2cl.transpiler.readable.nativejstypes.Main.testNativeJsTypeWithNamespace"
[testNativeJsTypeWithoutNamespace] => [m_testNativeJsTypeWithoutNamespace__]
[testNativeJsTypeWithoutNamespace] => [Main.$clinit();] "com.google.j2cl.transpiler.readable.nativejstypes.Main.testNativeJsTypeWithoutNamespace"
[Bar bar = new Bar(6, 7);] => [let bar = new Bar(6, 7);] "com.google.j2cl.transpiler.readable.nativejstypes.Main.testNativeJsTypeWithoutNamespace"
[bar] => [bar] "bar"
[bar.x = 50;] => [bar.x = 50;] "com.google.j2cl.transpiler.readable.nativejstypes.Main.testNativeJsTypeWithoutNamespace"
[bar.y = 5;] => [bar.y = 5;] "com.google.j2cl.transpiler.readable.nativejstypes.Main.testNativeJsTypeWithoutNamespace"
[Bar.f = 10;] => [Bar.f = 10;] "com.google.j2cl.transpiler.readable.nativejstypes.Main.testNativeJsTypeWithoutNamespace"
[return bar.product();] => [return bar.product();] "com.google.j2cl.transpiler.readable.nativejstypes.Main.testNativeJsTypeWithoutNamespace"
[testInnerNativeJsType] => [m_testInnerNativeJsType__]
[testInnerNativeJsType] => [Main.$clinit();] "com.google.j2cl.transpiler.readable.nativejstypes.Main.testInnerNativeJsType"
[Bar.Inner unusedBarInner = new Bar.Inner(1);] => [let unusedBarInner = new Bar.Inner(1);] "com.google.j2cl.transpiler.readable.nativejstypes.Main.testInnerNativeJsType"
[unusedBarInner] => [unusedBarInner] "unusedBarInner"
[BarInnerWithDotInName unusedBarInnerWithDotInName = new BarInnerWithDotInName(2);] => [let unusedBarInnerWithDotInName = new $synthetic_com_google_j2cl_transpiler_readable_nativejstypes_Bar.Inner(2);] "com.google.j2cl.transpiler.readable.nativejstypes.Main.testInnerNativeJsType"
[unusedBarInnerWithDotInName] => [unusedBarInnerWithDotInName] "unusedBarInnerWithDotInName"
[testGlobalNativeJsType] => [m_testGlobalNativeJsType__]
[testGlobalNativeJsType] => [Main.$clinit();] "com.google.j2cl.transpiler.readable.nativejstypes.Main.testGlobalNativeJsType"
[Headers header = new Headers();] => [let header = new Headers();] "com.google.j2cl.transpiler.readable.nativejstypes.Main.testGlobalNativeJsType"
[header] => [header] "header"
[header.append("Content-Type", "text/xml");] => [header.append("Content-Type", "text/xml");] "com.google.j2cl.transpiler.readable.nativejstypes.Main.testGlobalNativeJsType"
[testNativeTypeClassLiteral] => [m_testNativeTypeClassLiteral__]
[testNativeTypeClassLiteral] => [Main.$clinit();] "com.google.j2cl.transpiler.readable.nativejstypes.Main.testNativeTypeClassLiteral"
[Object o1 = Bar.class;] => [let o1 = Class.$get($JavaScriptObject);] "com.google.j2cl.transpiler.readable.nativejstypes.Main.testNativeTypeClassLiteral"
[o1] => [o1] "o1"
[o1 = Bar[][].class;] => [o1 = Class.$get(j_l_Object, 1);] "com.google.j2cl.transpiler.readable.nativejstypes.Main.testNativeTypeClassLiteral"
[testNativeTypeObjectMethods] => [m_testNativeTypeObjectMethods__]
[testNativeTypeObjectMethods] => [Main.$clinit();] "com.google.j2cl.transpiler.readable.nativejstypes.Main.testNativeTypeObjectMethods"
[Bar bar = new Bar(6, 7);] => [let bar = new Bar(6, 7);] "com.google.j2cl.transpiler.readable.nativejstypes.Main.testNativeTypeObjectMethods"
[bar] => [bar] "bar"
[bar.toString();] => [$Objects.m_toString__java_lang_Object(bar);] "com.google.j2cl.transpiler.readable.nativejstypes.Main.testNativeTypeObjectMethods"
[bar.hashCode();] => [$Objects.m_hashCode__java_lang_Object(bar);] "com.google.j2cl.transpiler.readable.nativejstypes.Main.testNativeTypeObjectMethods"
[bar.equals(new Object());] => [$Objects.m_equals__java_lang_Object__java_lang_Object(bar, j_l_Object.$create__());] "com.google.j2cl.transpiler.readable.nativejstypes.Main.testNativeTypeObjectMethods"
[Main] => [$clinit]
[Main] => [Main.$clinit = (() =>{
    });] "com.google.j2cl.transpiler.readable.nativejstypes.Main.<clinit>"
[Main] => [Main.$loadModules();] "com.google.j2cl.transpiler.readable.nativejstypes.Main.<clinit>"
[Main] => [j_l_Object.$clinit();] "com.google.j2cl.transpiler.readable.nativejstypes.Main.<clinit>"
