[AssertSimple] => [AssertSimple]
[AssertSimple] => [constructor]
[AssertSimple] => [super();] "com.google.j2cl.transpiler.readable.assertsimple.AssertSimple.<synthetic: ctor_js>"
[AssertSimple] => [$create__]
[AssertSimple] => [AssertSimple.$clinit();] "com.google.j2cl.transpiler.readable.assertsimple.AssertSimple.<synthetic: ctor_create>"
[AssertSimple] => [let $instance = new AssertSimple();] "com.google.j2cl.transpiler.readable.assertsimple.AssertSimple.<synthetic: ctor_create>"
[AssertSimple] => [$instance.$ctor__com_google_j2cl_transpiler_readable_assertsimple_AssertSimple__();] "com.google.j2cl.transpiler.readable.assertsimple.AssertSimple.<synthetic: ctor_create>"
[AssertSimple] => [return $instance;] "com.google.j2cl.transpiler.readable.assertsimple.AssertSimple.<synthetic: ctor_create>"
[AssertSimple] => [$ctor__com_google_j2cl_transpiler_readable_assertsimple_AssertSimple__]
[AssertSimple] => [this.$ctor__java_lang_Object__();] "com.google.j2cl.transpiler.readable.assertsimple.AssertSimple.<init>"
[main] => [m_main__arrayOf_java_lang_String]
[args] => [args] "args"
[main] => [AssertSimple.$clinit();] "com.google.j2cl.transpiler.readable.assertsimple.AssertSimple.main"
[assert 1 + 2 == 3;] => [$Asserts.$assert(1 + 2 == 3);] "com.google.j2cl.transpiler.readable.assertsimple.AssertSimple.main"
[AssertSimple] => [$clinit]
[AssertSimple] => [AssertSimple.$clinit = (() =>{
    });] "com.google.j2cl.transpiler.readable.assertsimple.AssertSimple.<clinit>"
[AssertSimple] => [AssertSimple.$loadModules();] "com.google.j2cl.transpiler.readable.assertsimple.AssertSimple.<clinit>"
[AssertSimple] => [j_l_Object.$clinit();] "com.google.j2cl.transpiler.readable.assertsimple.AssertSimple.<clinit>"
