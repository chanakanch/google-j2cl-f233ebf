[Main] => [Main]
[Main] => [constructor]
[Main] => [super();] "com.google.j2cl.transpiler.readable.jsvarargs.Main.<synthetic: ctor_js>"
[Main] => [/** @public {number} */
    this.f_field__com_google_j2cl_transpiler_readable_jsvarargs_Main = 0;] "com.google.j2cl.transpiler.readable.jsvarargs.Main.<synthetic: ctor_js>"
[field] => [f_field__com_google_j2cl_transpiler_readable_jsvarargs_Main]
[Main] => [$create__int]
[f] => [f] "f"
[Main] => [Main.$clinit();] "com.google.j2cl.transpiler.readable.jsvarargs.Main.<synthetic: ctor_create>"
[Main] => [let $instance = new Main();] "com.google.j2cl.transpiler.readable.jsvarargs.Main.<synthetic: ctor_create>"
[Main] => [$instance.$ctor__com_google_j2cl_transpiler_readable_jsvarargs_Main__int(f);] "com.google.j2cl.transpiler.readable.jsvarargs.Main.<synthetic: ctor_create>"
[Main] => [return $instance;] "com.google.j2cl.transpiler.readable.jsvarargs.Main.<synthetic: ctor_create>"
[Main] => [$ctor__com_google_j2cl_transpiler_readable_jsvarargs_Main__int]
[f] => [f] "f"
[Main] => [this.$ctor__java_lang_Object__();] "com.google.j2cl.transpiler.readable.jsvarargs.Main.<init>"
[this.field = f;] => [this.f_field__com_google_j2cl_transpiler_readable_jsvarargs_Main = f;] "com.google.j2cl.transpiler.readable.jsvarargs.Main.<init>"
[f1] => [f1]
[multiplier] => [multiplier] "multiplier"
[numbers] => [numbers] "numbers"
[f1] => [Main.$clinit();] "com.google.j2cl.transpiler.readable.jsvarargs.Main.f1"
[f1] => [$Arrays.$stampType(numbers, $int, 1);] "com.google.j2cl.transpiler.readable.jsvarargs.Main.f1"
[return numbers.length + numbers[0] + multiplier;] => [return numbers.length + numbers[0] + multiplier;] "com.google.j2cl.transpiler.readable.jsvarargs.Main.f1"
[f2] => [f2]
[numbers] => [numbers] "numbers"
[f2] => [Main.$clinit();] "com.google.j2cl.transpiler.readable.jsvarargs.Main.f2"
[f2] => [$Arrays.$stampType(numbers, $int, 1);] "com.google.j2cl.transpiler.readable.jsvarargs.Main.f2"
[return numbers.length + numbers[0];] => [return numbers.length + numbers[0];] "com.google.j2cl.transpiler.readable.jsvarargs.Main.f2"
[f3] => [f3]
[m] => [m] "m"
[numbers] => [numbers] "numbers"
[f3] => [$Arrays.$stampType(numbers, $int, 1);] "com.google.j2cl.transpiler.readable.jsvarargs.Main.f3"
[return this.field + m + numbers[1];] => [return this.f_field__com_google_j2cl_transpiler_readable_jsvarargs_Main + m + numbers[1];] "com.google.j2cl.transpiler.readable.jsvarargs.Main.f3"
[f4] => [f4]
[numbers] => [numbers] "numbers"
[f4] => [$Arrays.$stampType(numbers, $int, 1);] "com.google.j2cl.transpiler.readable.jsvarargs.Main.f4"
[return this.field + numbers[1];] => [return this.f_field__com_google_j2cl_transpiler_readable_jsvarargs_Main + numbers[1];] "com.google.j2cl.transpiler.readable.jsvarargs.Main.f4"
[generics] => [generics]
[elements] => [elements] "elements"
[generics] => [Main.$clinit();] "com.google.j2cl.transpiler.readable.jsvarargs.Main.generics"
[return elements[0];] => [return elements[0];] "com.google.j2cl.transpiler.readable.jsvarargs.Main.generics"
[parameterizedType] => [parameterizedType]
[elements] => [elements] "elements"
[parameterizedType] => [Main.$clinit();] "com.google.j2cl.transpiler.readable.jsvarargs.Main.parameterizedType"
[parameterizedType] => [$Arrays.$stampType(elements, List, 1);] "com.google.j2cl.transpiler.readable.jsvarargs.Main.parameterizedType"
[return elements[0].get(0);] => [return /**@type {Main} */ ($Casts.$to(elements[0].getAtIndex(0), Main));] "com.google.j2cl.transpiler.readable.jsvarargs.Main.parameterizedType"
[parameterizedByT] => [parameterizedByT]
[elements] => [elements] "elements"
[parameterizedByT] => [Main.$clinit();] "com.google.j2cl.transpiler.readable.jsvarargs.Main.parameterizedByT"
[parameterizedByT] => [$Arrays.$stampType(elements, List, 1);] "com.google.j2cl.transpiler.readable.jsvarargs.Main.parameterizedByT"
[return elements[0].get(0);] => [return elements[0].getAtIndex(0);] "com.google.j2cl.transpiler.readable.jsvarargs.Main.parameterizedByT"
[testStaticMethodNotFirst] => [m_testStaticMethodNotFirst__]
[f1(1, 1, 2);] => [Main.f1(1, 1, 2);] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testStaticMethodNotFirst"
[Main.f1(1, 1, 2);] => [Main.f1(1, 1, 2);] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testStaticMethodNotFirst"
[f1(1);] => [Main.f1(1);] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testStaticMethodNotFirst"
[Main.f1(1);] => [Main.f1(1);] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testStaticMethodNotFirst"
[f1(1, new int[] {1, 2});] => [Main.f1(1, 1, 2);] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testStaticMethodNotFirst"
[Main.f1(1, new int[] {1, 2});] => [Main.f1(1, 1, 2);] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testStaticMethodNotFirst"
[f1(1, new int[] {});] => [Main.f1(1);] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testStaticMethodNotFirst"
[Main.f1(1, new int[] {});] => [Main.f1(1);] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testStaticMethodNotFirst"
[int[] ints = new int[] {1, 2};] => [let ints = /**@type {!Array<number>} */ ($Arrays.$init([1, 2], $int));] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testStaticMethodNotFirst"
[ints] => [ints] "ints"
[f1(1, ints);] => [Main.f1(1, ...InternalPreconditions.m_checkNotNull__java_lang_Object(ints));] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testStaticMethodNotFirst"
[Main.f1(1, ints);] => [Main.f1(1, ...InternalPreconditions.m_checkNotNull__java_lang_Object(ints));] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testStaticMethodNotFirst"
[Main.f1(1, null);] => [Main.f1(1, ...InternalPreconditions.m_checkNotNull__java_lang_Object(null));] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testStaticMethodNotFirst"
[testStaticMethodFirst] => [m_testStaticMethodFirst__]
[f2(1, 2);] => [Main.f2(1, 2);] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testStaticMethodFirst"
[generics(1, 2);] => [Main.generics(Integer.m_valueOf__int(1), Integer.m_valueOf__int(2));] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testStaticMethodFirst"
[Main.f2(1, 2);] => [Main.f2(1, 2);] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testStaticMethodFirst"
[Main.generics(1, 2);] => [Main.generics(Integer.m_valueOf__int(1), Integer.m_valueOf__int(2));] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testStaticMethodFirst"
[f2();] => [Main.f2();] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testStaticMethodFirst"
[generics();] => [Main.generics();] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testStaticMethodFirst"
[Main.f2();] => [Main.f2();] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testStaticMethodFirst"
[Main.generics();] => [Main.generics();] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testStaticMethodFirst"
[Main.<Integer>generics();] => [Main.generics();] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testStaticMethodFirst"
[f2(new int[] {1, 2});] => [Main.f2(1, 2);] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testStaticMethodFirst"
[Main.f2(new int[] {1, 2});] => [Main.f2(1, 2);] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testStaticMethodFirst"
[Main.generics(new int[] {1, 2});] => [Main.generics(/**@type {!Array<number>} */ ($Arrays.$init([1, 2], $int)));] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testStaticMethodFirst"
[Main.<Integer>generics(new Integer[] {1, 2});] => [Main.generics(Integer.m_valueOf__int(1), Integer.m_valueOf__int(2));] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testStaticMethodFirst"
[f2(new int[] {});] => [Main.f2();] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testStaticMethodFirst"
[Main.f2(new int[] {});] => [Main.f2();] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testStaticMethodFirst"
[Main.generics(new int[] {});] => [Main.generics(/**@type {!Array<number>} */ ($Arrays.$init([], $int)));] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testStaticMethodFirst"
[int[] ints = new int[] {1, 2};] => [let ints = /**@type {!Array<number>} */ ($Arrays.$init([1, 2], $int));] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testStaticMethodFirst"
[ints] => [ints] "ints"
[Integer[] integers = new Integer[] {1, 2};] => [let integers = /**@type {!Array<Integer>} */ ($Arrays.$init([Integer.m_valueOf__int(1), Integer.m_valueOf__int(2)], Integer));] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testStaticMethodFirst"
[integers] => [integers] "integers"
[f2(ints);] => [Main.f2(...InternalPreconditions.m_checkNotNull__java_lang_Object(ints));] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testStaticMethodFirst"
[Main.f2(ints);] => [Main.f2(...InternalPreconditions.m_checkNotNull__java_lang_Object(ints));] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testStaticMethodFirst"
[Main.<Integer>generics(integers);] => [Main.generics(...InternalPreconditions.m_checkNotNull__java_lang_Object(integers));] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testStaticMethodFirst"
[testInstanceMethodNotFirst] => [m_testInstanceMethodNotFirst__]
[Main m = new Main(1);] => [let m = Main.$create__int(1);] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testInstanceMethodNotFirst"
[m] => [m] "m"
[m.f3(1, 1, 2);] => [m.f3(1, 1, 2);] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testInstanceMethodNotFirst"
[m.f3(1);] => [m.f3(1);] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testInstanceMethodNotFirst"
[m.f3(1, new int[] {1, 2});] => [m.f3(1, 1, 2);] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testInstanceMethodNotFirst"
[m.f3(1, new int[] {});] => [m.f3(1);] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testInstanceMethodNotFirst"
[int[] ints = new int[] {1, 2};] => [let ints = /**@type {!Array<number>} */ ($Arrays.$init([1, 2], $int));] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testInstanceMethodNotFirst"
[ints] => [ints] "ints"
[m.f3(1, ints);] => [m.f3(1, ...InternalPreconditions.m_checkNotNull__java_lang_Object(ints));] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testInstanceMethodNotFirst"
[testInstanceMethodFirst] => [m_testInstanceMethodFirst__]
[Main m = new Main(1);] => [let m = Main.$create__int(1);] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testInstanceMethodFirst"
[m] => [m] "m"
[m.f4(1, 2);] => [m.f4(1, 2);] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testInstanceMethodFirst"
[m.f4();] => [m.f4();] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testInstanceMethodFirst"
[m.f4(new int[] {1, 2});] => [m.f4(1, 2);] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testInstanceMethodFirst"
[m.f4(new int[] {});] => [m.f4();] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testInstanceMethodFirst"
[int[] ints = new int[] {1, 2};] => [let ints = /**@type {!Array<number>} */ ($Arrays.$init([1, 2], $int));] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testInstanceMethodFirst"
[ints] => [ints] "ints"
[m.f4(ints);] => [m.f4(...InternalPreconditions.m_checkNotNull__java_lang_Object(ints));] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testInstanceMethodFirst"
[testJsFunction] => [m_testJsFunction__]
[AFunction a = new AFunction();] => [let a = AFunction.$create__();] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testJsFunction"
[a] => [a] "a"
[Object o1 = new Object();] => [let o1 = j_l_Object.$create__();] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testJsFunction"
[o1] => [o1] "o1"
[Object o2 = new Object();] => [let o2 = j_l_Object.$create__();] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testJsFunction"
[o2] => [o2] "o2"
[a.f1(0, o1, o2);] => [a(0, o1, o2);] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testJsFunction"
[a.f1(0);] => [a(0);] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testJsFunction"
[a.f1(0, new Object[] {o1, o2});] => [a(0, o1, o2);] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testJsFunction"
[a.f1(0, new Object[] {});] => [a(0);] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testJsFunction"
[Object[] os = new Object[] {o1, o2};] => [let os = [o1, o2];] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testJsFunction"
[os] => [os] "os"
[a.f1(0, os);] => [a(0, ...InternalPreconditions.m_checkNotNull__java_lang_Object(os));] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testJsFunction"
[testSideEffect] => [m_testSideEffect__]
[int[] ints = new int[] {1, 2};] => [let ints = /**@type {!Array<number>} */ ($Arrays.$init([1, 2], $int));] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testSideEffect"
[ints] => [ints] "ints"
[new Main(1).f3(1, ints);] => [Main.$create__int(1).f3(1, ...InternalPreconditions.m_checkNotNull__java_lang_Object(ints));] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testSideEffect"
[testNullJsVarargs] => [m_testNullJsVarargs__]
[int[] ints = null;] => [let ints = null;] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testNullJsVarargs"
[ints] => [ints] "ints"
[Main.f2(ints);] => [Main.f2(...InternalPreconditions.m_checkNotNull__java_lang_Object(ints));] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testNullJsVarargs"
[testGenericJsFunctionWithVarags] => [m_testGenericJsFunctionWithVarags__]
[GenericFunction<U> function = (n, param) -> param;] => [let function_1 = ((/** U */ n, .../** ...U */ param) =>{
      return /**@type {*} */ (param);
    });] "com.google.j2cl.transpiler.readable.jsvarargs.Main.testGenericJsFunctionWithVarags"
[function] => [function_1] "function"
[n] => [n] "n"
[param] => [param] "param"
[param] => [return /**@type {*} */ (param);] "com.google.j2cl.transpiler.readable.jsvarargs.Main.<lambda in testGenericJsFunctionWithVarags>"
[Main] => [$clinit]
[Main] => [Main.$clinit = (() =>{
    });] "com.google.j2cl.transpiler.readable.jsvarargs.Main.<clinit>"
[Main] => [Main.$loadModules();] "com.google.j2cl.transpiler.readable.jsvarargs.Main.<clinit>"
[Main] => [j_l_Object.$clinit();] "com.google.j2cl.transpiler.readable.jsvarargs.Main.<clinit>"
