[IntersectionTypeTest] => [IntersectionTypeTest]
[IntersectionTypeTest] => [constructor]
[IntersectionTypeTest] => [super();] "com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest.<synthetic: ctor_js>"
[IntersectionTypeTest] => [$create__]
[IntersectionTypeTest] => [IntersectionTypeTest.$clinit();] "com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest.<synthetic: ctor_create>"
[IntersectionTypeTest] => [let $instance = new IntersectionTypeTest();] "com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest.<synthetic: ctor_create>"
[IntersectionTypeTest] => [$instance.$ctor__com_google_j2cl_transpiler_readable_intersectiontype_IntersectionTypeTest__();] "com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest.<synthetic: ctor_create>"
[IntersectionTypeTest] => [return $instance;] "com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest.<synthetic: ctor_create>"
[IntersectionTypeTest] => [$ctor__com_google_j2cl_transpiler_readable_intersectiontype_IntersectionTypeTest__]
[IntersectionTypeTest] => [this.$ctor__java_lang_Object__();] "com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest.<init>"
[getAndSet] => [m_getAndSet__com_google_j2cl_transpiler_readable_intersectiontype_Getable]
[object] => [object] "object"
[getAndSet] => [IntersectionTypeTest.$clinit();] "com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest.getAndSet"
[object.set(1);] => [/**@type {Setable} */ ($Casts.$to(object, Setable)).m_set__int(1);] "com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest.getAndSet"
[object.get();] => [/**@type {Getable} */ (object).m_get__();] "com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest.getAndSet"
[cast] => [m_cast__java_lang_Object]
[o] => [o] "o"
[cast] => [IntersectionTypeTest.$clinit();] "com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest.cast"
[if (o == null) {
      return (Setable & Getable<T>) o;
    }] => [if ($Equality.$same(o, null)) {
      return /**@type {Getable<T>} */ ($Casts.$to($Casts.$to(o, Getable), Setable));
    }] "com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest.cast"
[return (Setable & Getable<T>) o;] => [return /**@type {Getable<T>} */ ($Casts.$to($Casts.$to(o, Getable), Setable));] "com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest.cast"
[return (Getable<T> & Setable) o;] => [return /**@type {Getable<T>} */ ($Casts.$to($Casts.$to(o, Getable), Setable));] "com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest.cast"
[cast1] => [m_cast1__java_lang_Object]
[s] => [s] "s"
[cast1] => [IntersectionTypeTest.$clinit();] "com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest.cast1"
[return (Getable<Comparable<String>> & Setable) s;] => [return /**@type {Getable<(Comparable<?string>|boolean|number|string)>} */ ($Casts.$to($Casts.$to(s, Getable), Setable));] "com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest.cast1"
[cast2] => [m_cast2__java_lang_Object]
[s] => [s] "s"
[cast2] => [IntersectionTypeTest.$clinit();] "com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest.cast2"
[return (Getable<Comparable<T>> & Setable) s;] => [return /**@type {Getable<(Comparable<T>|boolean|number|string)>} */ ($Casts.$to($Casts.$to(s, Getable), Setable));] "com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest.cast2"
[cast3] => [m_cast3__java_lang_Object]
[s] => [s] "s"
[return s;] => [return s;] "com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest.cast3"
[method] => [m_method__]
[method] => [IntersectionTypeTest.$clinit();] "com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest.method"
[return (Cmp & Serial) () -> 1;] => [return /**@type {Cmp} */ (new $LambdaAdaptor$1((() =>{
      return 1;
    })));] "com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest.method"
[1] => [return 1;] "com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest.<lambda in method>"
[method2] => [m_method2__]
[method2] => [IntersectionTypeTest.$clinit();] "com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest.method2"
[return (Cmp2 & Serial) (a) -> 1;] => [return /**@type {Cmp2} */ (new $LambdaAdaptor$2(((/** number */ a) =>{
      return 1;
    })));] "com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest.method2"
[a] => [a] "a"
[1] => [return 1;] "com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest.<lambda in method2>"
[testClosureAssignment] => [m_testClosureAssignment__java_lang_Object]
[o] => [o] "o"
[testClosureAssignment] => [IntersectionTypeTest.$clinit();] "com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest.testClosureAssignment"
[A e = (A & EmptyA & EmptyB) o;] => [let e = /**@type {A} */ ($Casts.$to($Casts.$to($Casts.$to(o, A), EmptyA), EmptyB));] "com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest.testClosureAssignment"
[e] => [e] "e"
[EmptyA g = (A & EmptyA & EmptyB) o;] => [let g = /**@type {EmptyA} */ ($Casts.$to($Casts.$to($Casts.$to(o, A), EmptyA), EmptyB));] "com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest.testClosureAssignment"
[g] => [g] "g"
[EmptyB s = (A & EmptyA & EmptyB) o;] => [let s = /**@type {EmptyB} */ ($Casts.$to($Casts.$to($Casts.$to(o, A), EmptyA), EmptyB));] "com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest.testClosureAssignment"
[s] => [s] "s"
[get] => [m_get__java_lang_Object_$p_com_google_j2cl_transpiler_readable_intersectiontype_IntersectionTypeTest]
[t] => [t] "t"
[get] => [IntersectionTypeTest.$clinit();] "com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest.get"
[return t;] => [return t;] "com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest.get"
[m] => [m_m___$p_com_google_j2cl_transpiler_readable_intersectiontype_IntersectionTypeTest]
[m] => [IntersectionTypeTest.$clinit();] "com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest.m"
[return (T) get(new Object());] => [return /**@type {T} */ ($Casts.$to(IntersectionTypeTest.m_get__java_lang_Object_$p_com_google_j2cl_transpiler_readable_intersectiontype_IntersectionTypeTest(j_l_Object.$create__()), A));] "com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest.m"
[n] => [m_n___$p_com_google_j2cl_transpiler_readable_intersectiontype_IntersectionTypeTest]
[n] => [IntersectionTypeTest.$clinit();] "com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest.n"
[return null;] => [return null;] "com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest.n"
[set] => [m_set__com_google_j2cl_transpiler_readable_intersectiontype_IntersectionTypeTest_A_$p_com_google_j2cl_transpiler_readable_intersectiontype_IntersectionTypeTest]
[t] => [t] "t"
[set] => [IntersectionTypeTest.$clinit();] "com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest.set"
[testMethodCall] => [m_testMethodCall__]
[Object o = m();] => [let o = IntersectionTypeTest.m_m___$p_com_google_j2cl_transpiler_readable_intersectiontype_IntersectionTypeTest();] "com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest.testMethodCall"
[o] => [o] "o"
[set((A & EmptyA) o);] => [IntersectionTypeTest.m_set__com_google_j2cl_transpiler_readable_intersectiontype_IntersectionTypeTest_A_$p_com_google_j2cl_transpiler_readable_intersectiontype_IntersectionTypeTest(/**@type {A} */ ($Casts.$to($Casts.$to(o, A), EmptyA)));] "com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest.testMethodCall"
[set(m());] => [IntersectionTypeTest.m_set__com_google_j2cl_transpiler_readable_intersectiontype_IntersectionTypeTest_A_$p_com_google_j2cl_transpiler_readable_intersectiontype_IntersectionTypeTest(IntersectionTypeTest.m_m___$p_com_google_j2cl_transpiler_readable_intersectiontype_IntersectionTypeTest());] "com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest.testMethodCall"
[Getable<?> g = n();] => [let g = /**@type {Getable<A>} */ (IntersectionTypeTest.m_n___$p_com_google_j2cl_transpiler_readable_intersectiontype_IntersectionTypeTest());] "com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest.testMethodCall"
[g] => [g] "g"
[IntersectionTypeTest] => [$clinit]
[IntersectionTypeTest] => [IntersectionTypeTest.$clinit = (() =>{
    });] "com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest.<clinit>"
[IntersectionTypeTest] => [IntersectionTypeTest.$loadModules();] "com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest.<clinit>"
[IntersectionTypeTest] => [j_l_Object.$clinit();] "com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest.<clinit>"
